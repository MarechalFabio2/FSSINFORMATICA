/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCliente;
import controller.ControllerContasReceber;
import controller.ControllerFormaPagamento;
import controller.ControllerParcelas;
import controller.ControllerProdutos;
import controller.ControllerProdutosVendasProdutos;
import controller.ControllerVendas;
import controller.ControllerVendasCliente;
import controller.ControllerVendasContasReceber;
import controller.ControllerVendasFormaPagamento;
import controller.ControllerVendasProdutos;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Date;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ModelCliente;
import model.ModelContasReceber;
import model.ModelFormaPagamento;
import model.ModelParcelas;
import model.ModelProdutos;
import model.ModelProdutosVendasProdutos;
import model.ModelVendas;
import model.ModelVendasCliente;
import model.ModelVendasContasReceber;
import model.ModelVendasProdutos;
import util.BLDatas;
import util.BLMascaras;
import util.Formatador;
import util.LetrasMaiusculas;
import util.ModeloTabela;

/**
 *
 * @author Fabio
 */
public class ViewVendas extends javax.swing.JFrame {

    ControllerCliente controllerCliente = new ControllerCliente();
    ModelCliente modelCliente = new ModelCliente();
    ArrayList<ModelCliente> listaModelClientes = new ArrayList<>();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ModelProdutos modelProdutos = new ModelProdutos();
    ArrayList<ModelProdutos> listaModelProdutos = new ArrayList<>();
    ArrayList<ModelVendasCliente> listaModelVendasCliente = new ArrayList<>();
    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();
    ControllerVendas controllerVendas = new ControllerVendas();
    ModelVendas modelVendas = new ModelVendas();
    BLDatas bLDatas = new BLDatas();
    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    ModelVendasProdutos modelVendasProdutos = new ModelVendasProdutos();
    ArrayList<ModelVendasProdutos> listaModelVendasProdutos = new ArrayList<>();
    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutos = new ArrayList<>();
    ArrayList<ModelVendas> listaModelVendas = new ArrayList<>();
    ArrayList<ModelFormaPagamento> listaModelFormaPagamento = new ArrayList<>();
    ModelFormaPagamento modelFormaPagamento = new ModelFormaPagamento();
    ControllerFormaPagamento controllerFormaPagamento = new ControllerFormaPagamento();
    ControllerVendasFormaPagamento controllerVendasFormaPagamento = new ControllerVendasFormaPagamento();
    ModelContasReceber modelContasReceber = new ModelContasReceber();
    ControllerContasReceber controllerContasReceber = new ControllerContasReceber();
    ArrayList<ModelContasReceber> listaModelContasReceber = new ArrayList<>();
    ModelVendasContasReceber modelVendasContasReceber = new ModelVendasContasReceber();
    ControllerVendasContasReceber controllerVendasContasReceber = new ControllerVendasContasReceber();
    ArrayList<ModelVendasContasReceber> listaModelVendasContasReceber = new ArrayList<>();
    Formatador formatador = new Formatador();
    String alterarSalvar;
    private ViewPagamentoVendas viewPagamentoVendas;
    BLMascaras bLMascaras = new BLMascaras();
    ModelParcelas modelParcelas = new ModelParcelas();
    ControllerParcelas controllerParcelas = new ControllerParcelas();

    /**
     * Creates new form ViewVendas
     */
    public ViewVendas() {
        initComponents();
        habilitarDesabilitarCampos(false);
        listarClientes();
        listarProdutos();
        listarFormaPagamento();
        setLocationRelativeTo(null);
        carregarVendas();
        preencherCodigoClientePeloCombobox();
        preencherCodigoProdutoPeloCombobox();
        preencherCodigoFormaPagamentoPeloCombobox();
        jtfCodigoPagamento.setVisible(false);
        tipoPagamento();
        letraMaiuscula();
        setIcone();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PesquisaVendas = new javax.swing.ButtonGroup();
        TipoPagamento = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        uJPanelImagem1 = new componentes.UJPanelImagem();
        uJPanelImagem2 = new componentes.UJPanelImagem();
        jLabel1 = new javax.swing.JLabel();
        jtfCodigoCliente = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jtfEndenco = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jcbNomeCliente = new componentes.UJComboBox();
        jLabel15 = new javax.swing.JLabel();
        jtfCPF = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfNumeroVenda = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jtfTelefone = new javax.swing.JFormattedTextField();
        jcbEstado = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jtfCidade = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jtfBairro = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfCodigoProduto = new javax.swing.JTextField();
        jcbNomeProduto = new componentes.UJComboBox();
        jLabel7 = new javax.swing.JLabel();
        jtfQuantidade = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jtfValorVenda = new javax.swing.JTextField();
        jbAdicionar = new javax.swing.JButton();
        jbRemoverProdutos = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        uJPanelImagem3 = new componentes.UJPanelImagem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProdutosVenda = new javax.swing.JTable();
        jtfDesconto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jcbPagamento = new componentes.UJComboBox();
        jtfDataVencimento = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtfValorTotal = new javax.swing.JTextField();
        jrbAVista = new javax.swing.JRadioButton();
        jrbAPrazo = new javax.swing.JRadioButton();
        jtfParcelas = new javax.swing.JTextField();
        uJPanelImagem5 = new componentes.UJPanelImagem();
        jbCancelar = new javax.swing.JButton();
        jbNovo = new javax.swing.JButton();
        jtfCodigoPagamento = new javax.swing.JTextField();
        jbSalvar = new javax.swing.JButton();
        jlQtdeParcelas = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtParcelas = new javax.swing.JTable();
        uJPanelImagem4 = new componentes.UJPanelImagem();
        jtfPesquisa = new javax.swing.JTextField();
        jbPesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtVendas = new javax.swing.JTable();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jrbCodigo = new javax.swing.JRadioButton();
        jrbNomeCliente = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vendas");
        setResizable(false);

        uJPanelImagem1.setImagem(new java.io.File("D:\\VendasRenan\\src\\imagens\\flamengo.png"));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Código Cliente");

        jtfCodigoCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfCodigoClienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoClienteFocusLost(evt);
            }
        });
        jtfCodigoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoClienteActionPerformed(evt);
            }
        });

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Endereço");

        jtfEndenco.setEnabled(false);
        jtfEndenco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEndencoActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nome do Cliente:");

        jcbNomeCliente.setAutocompletar(true);
        jcbNomeCliente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbNomeClientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("CPF/CNPJ");

        try {
            jtfCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtfCPF.setEnabled(false);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Número da venda:");

        jtfNumeroVenda.setEditable(false);
        jtfNumeroVenda.setBackground(new java.awt.Color(204, 255, 204));
        jtfNumeroVenda.setEnabled(false);

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Telefone");

        try {
            jtfTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtfTelefone.setEnabled(false);

        jcbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "   ", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        jcbEstado.setEnabled(false);

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Estado");

        jtfCidade.setEnabled(false);

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Cidade");

        jtfBairro.setEnabled(false);

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Bairro");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Código Produto");

        jtfCodigoProduto.setDragEnabled(true);
        jtfCodigoProduto.setFocusTraversalPolicyProvider(true);
        jtfCodigoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfCodigoProdutoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoProdutoFocusLost(evt);
            }
        });
        jtfCodigoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoProdutoActionPerformed(evt);
            }
        });

        jcbNomeProduto.setAutocompletar(true);
        jcbNomeProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbNomeProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Quantidade:");

        jtfQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfQuantidadeFocusGained(evt);
            }
        });
        jtfQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfQuantidadeActionPerformed(evt);
            }
        });

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Valor de Venda:");

        jtfValorVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfValorVendaFocusGained(evt);
            }
        });
        jtfValorVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfValorVendaActionPerformed(evt);
            }
        });

        jbAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/adicionar.png"))); // NOI18N
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });

        jbRemoverProdutos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/excluir.png"))); // NOI18N
        jbRemoverProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverProdutosActionPerformed(evt);
            }
        });

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Nome do Produto:");

        javax.swing.GroupLayout uJPanelImagem2Layout = new javax.swing.GroupLayout(uJPanelImagem2);
        uJPanelImagem2.setLayout(uJPanelImagem2Layout);
        uJPanelImagem2Layout.setHorizontalGroup(
            uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jtfValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jbAdicionar)
                .addGap(18, 18, 18)
                .addComponent(jbRemoverProdutos)
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addComponent(jtfEndenco, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel14)
                                .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jtfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel17))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel18)
                                .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addGap(111, 111, 111))
                                .addComponent(jtfTelefone)))
                        .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jtfCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jcbNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jtfNumeroVenda))))
                    .addGap(15, 15, 15)))
        );
        uJPanelImagem2Layout.setVerticalGroup(
            uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, uJPanelImagem2Layout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jcbNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                                    .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel16))
                                    .addGap(6, 6, 6)
                                    .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(6, 6, 6)
                                .addComponent(jtfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addGap(6, 6, 6)
                            .addComponent(jtfValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jbAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbRemoverProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(6, 6, 6)
                                    .addComponent(jtfNumeroVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                                            .addComponent(jLabel15)
                                            .addGap(6, 6, 6)
                                            .addComponent(jtfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jcbNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(uJPanelImagem2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(6, 6, 6)
                                        .addComponent(jtfEndenco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, uJPanelImagem2Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(uJPanelImagem2Layout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtfCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(68, Short.MAX_VALUE)))
        );

        jtProdutosVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Prod.", "Nome Produto", "Quant.", "Valor Custo", "Valor Venda", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtProdutosVenda);
        if (jtProdutosVenda.getColumnModel().getColumnCount() > 0) {
            jtProdutosVenda.getColumnModel().getColumn(0).setMinWidth(70);
            jtProdutosVenda.getColumnModel().getColumn(0).setPreferredWidth(70);
            jtProdutosVenda.getColumnModel().getColumn(0).setMaxWidth(70);
            jtProdutosVenda.getColumnModel().getColumn(2).setMinWidth(70);
            jtProdutosVenda.getColumnModel().getColumn(2).setPreferredWidth(70);
            jtProdutosVenda.getColumnModel().getColumn(2).setMaxWidth(70);
            jtProdutosVenda.getColumnModel().getColumn(3).setMinWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(3).setPreferredWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(3).setMaxWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(4).setMinWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(4).setPreferredWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(4).setMaxWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(5).setMinWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(5).setPreferredWidth(90);
            jtProdutosVenda.getColumnModel().getColumn(5).setMaxWidth(90);
        }

        jtfDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDescontoFocusLost(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Forma de Pagamento:");

        jcbPagamento.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcbPagamentoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Data Vencimento:");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Desconto");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Valor Total:");

        jtfValorTotal.setEditable(false);
        jtfValorTotal.setFocusable(false);

        TipoPagamento.add(jrbAVista);
        jrbAVista.setForeground(new java.awt.Color(255, 255, 255));
        jrbAVista.setSelected(true);
        jrbAVista.setText("AV");
        jrbAVista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAVistaActionPerformed(evt);
            }
        });

        TipoPagamento.add(jrbAPrazo);
        jrbAPrazo.setForeground(new java.awt.Color(255, 255, 255));
        jrbAPrazo.setText("AP");
        jrbAPrazo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAPrazoActionPerformed(evt);
            }
        });

        jtfParcelas.setEnabled(false);

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/cancelar.png"))); // NOI18N
        jbCancelar.setMnemonic('c');
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/novo.png"))); // NOI18N
        jbNovo.setMnemonic('n');
        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });
        jbNovo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbNovoKeyPressed(evt);
            }
        });

        jtfCodigoPagamento.setEditable(false);
        jtfCodigoPagamento.setEnabled(false);
        jtfCodigoPagamento.setFocusable(false);
        jtfCodigoPagamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodigoPagamentoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout uJPanelImagem5Layout = new javax.swing.GroupLayout(uJPanelImagem5);
        uJPanelImagem5.setLayout(uJPanelImagem5Layout);
        uJPanelImagem5Layout.setHorizontalGroup(
            uJPanelImagem5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uJPanelImagem5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbCancelar)
                .addGap(18, 18, 18)
                .addComponent(jbNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCodigoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        uJPanelImagem5Layout.setVerticalGroup(
            uJPanelImagem5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uJPanelImagem5Layout.createSequentialGroup()
                .addGroup(uJPanelImagem5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancelar)
                    .addComponent(jbNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfCodigoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/salvar2.png"))); // NOI18N
        jbSalvar.setMnemonic('s');
        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });
        jbSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbSalvarKeyPressed(evt);
            }
        });

        jlQtdeParcelas.setForeground(new java.awt.Color(255, 255, 255));
        jlQtdeParcelas.setText("Qtde Parcelas");

        jtParcelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód. Prod.", "Nome Produto", "Quant.", "Valor Custo", "Valor Venda", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jtParcelas);
        if (jtParcelas.getColumnModel().getColumnCount() > 0) {
            jtParcelas.getColumnModel().getColumn(0).setMinWidth(70);
            jtParcelas.getColumnModel().getColumn(0).setPreferredWidth(70);
            jtParcelas.getColumnModel().getColumn(0).setMaxWidth(70);
            jtParcelas.getColumnModel().getColumn(2).setMinWidth(70);
            jtParcelas.getColumnModel().getColumn(2).setPreferredWidth(70);
            jtParcelas.getColumnModel().getColumn(2).setMaxWidth(70);
            jtParcelas.getColumnModel().getColumn(3).setMinWidth(90);
            jtParcelas.getColumnModel().getColumn(3).setPreferredWidth(90);
            jtParcelas.getColumnModel().getColumn(3).setMaxWidth(90);
            jtParcelas.getColumnModel().getColumn(4).setMinWidth(90);
            jtParcelas.getColumnModel().getColumn(4).setPreferredWidth(90);
            jtParcelas.getColumnModel().getColumn(4).setMaxWidth(90);
            jtParcelas.getColumnModel().getColumn(5).setMinWidth(90);
            jtParcelas.getColumnModel().getColumn(5).setPreferredWidth(90);
            jtParcelas.getColumnModel().getColumn(5).setMaxWidth(90);
        }

        javax.swing.GroupLayout uJPanelImagem3Layout = new javax.swing.GroupLayout(uJPanelImagem3);
        uJPanelImagem3.setLayout(uJPanelImagem3Layout);
        uJPanelImagem3Layout.setHorizontalGroup(
            uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uJPanelImagem3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(uJPanelImagem3Layout.createSequentialGroup()
                        .addComponent(uJPanelImagem5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSalvar))
                    .addGroup(uJPanelImagem3Layout.createSequentialGroup()
                        .addGroup(uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, uJPanelImagem3Layout.createSequentialGroup()
                                .addComponent(jcbPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(uJPanelImagem3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(30, 30, 30)))
                        .addComponent(jrbAVista)
                        .addGap(4, 4, 4)
                        .addComponent(jrbAPrazo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlQtdeParcelas))
                        .addGap(18, 18, 18)
                        .addGroup(uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfDataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfDesconto)
                            .addGroup(uJPanelImagem3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(0, 61, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addContainerGap())
        );
        uJPanelImagem3Layout.setVerticalGroup(
            uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uJPanelImagem3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(uJPanelImagem3Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(uJPanelImagem3Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(uJPanelImagem3Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jcbPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jrbAVista)
                                .addComponent(jrbAPrazo)
                                .addComponent(jtfParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, uJPanelImagem3Layout.createSequentialGroup()
                            .addGroup(uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(jlQtdeParcelas))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtfDataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(uJPanelImagem3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(uJPanelImagem5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalvar)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout uJPanelImagem1Layout = new javax.swing.GroupLayout(uJPanelImagem1);
        uJPanelImagem1.setLayout(uJPanelImagem1Layout);
        uJPanelImagem1Layout.setHorizontalGroup(
            uJPanelImagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(uJPanelImagem2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(uJPanelImagem3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        uJPanelImagem1Layout.setVerticalGroup(
            uJPanelImagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uJPanelImagem1Layout.createSequentialGroup()
                .addComponent(uJPanelImagem2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uJPanelImagem3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        jTabbedPane1.addTab("Cadastro", uJPanelImagem1);

        uJPanelImagem4.setForeground(new java.awt.Color(255, 255, 255));
        uJPanelImagem4.setImagem(new java.io.File("D:\\VendasRenan\\src\\imagens\\flamengo.png"));

        jbPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/pesquisar.png"))); // NOI18N
        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jtVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome Cliente", "Data", "Valor Compra"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtVendas);
        if (jtVendas.getColumnModel().getColumnCount() > 0) {
            jtVendas.getColumnModel().getColumn(0).setMinWidth(100);
            jtVendas.getColumnModel().getColumn(0).setPreferredWidth(100);
            jtVendas.getColumnModel().getColumn(0).setMaxWidth(100);
            jtVendas.getColumnModel().getColumn(2).setMinWidth(150);
            jtVendas.getColumnModel().getColumn(2).setPreferredWidth(150);
            jtVendas.getColumnModel().getColumn(2).setMaxWidth(150);
            jtVendas.getColumnModel().getColumn(3).setMinWidth(150);
            jtVendas.getColumnModel().getColumn(3).setPreferredWidth(150);
            jtVendas.getColumnModel().getColumn(3).setMaxWidth(150);
        }

        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/excluir.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/alterar.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        PesquisaVendas.add(jrbCodigo);
        jrbCodigo.setForeground(new java.awt.Color(255, 255, 255));
        jrbCodigo.setText("Codigo");

        PesquisaVendas.add(jrbNomeCliente);
        jrbNomeCliente.setForeground(new java.awt.Color(255, 255, 255));
        jrbNomeCliente.setSelected(true);
        jrbNomeCliente.setText("Nome Cliente");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Pesquisa:");

        javax.swing.GroupLayout uJPanelImagem4Layout = new javax.swing.GroupLayout(uJPanelImagem4);
        uJPanelImagem4.setLayout(uJPanelImagem4Layout);
        uJPanelImagem4Layout.setHorizontalGroup(
            uJPanelImagem4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uJPanelImagem4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(uJPanelImagem4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(uJPanelImagem4Layout.createSequentialGroup()
                        .addGroup(uJPanelImagem4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(uJPanelImagem4Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(208, 208, 208)
                                .addComponent(jrbCodigo)
                                .addGap(36, 36, 36)
                                .addComponent(jrbNomeCliente))
                            .addGroup(uJPanelImagem4Layout.createSequentialGroup()
                                .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbPesquisar))
                            .addGroup(uJPanelImagem4Layout.createSequentialGroup()
                                .addComponent(jbExcluir)
                                .addGap(18, 18, 18)
                                .addComponent(jbAlterar)))
                        .addGap(0, 125, Short.MAX_VALUE)))
                .addContainerGap())
        );
        uJPanelImagem4Layout.setVerticalGroup(
            uJPanelImagem4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(uJPanelImagem4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(uJPanelImagem4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jrbCodigo)
                    .addComponent(jrbNomeCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(uJPanelImagem4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(uJPanelImagem4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbExcluir)
                    .addComponent(jbAlterar))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Vendas", uJPanelImagem4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCodigoClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoClienteFocusLost
        // TODO add your handling code here:
        modelCliente = controllerCliente.getClienteController(Integer.parseInt(jtfCodigoCliente.getText()));
        jcbNomeCliente.setSelectedItem(modelCliente.getCliNome());
        jtfCPF.setText(String.valueOf(modelCliente.getCliCPF()));
        jtfEndenco.setText(String.valueOf(modelCliente.getCliEndereco()));
        jtfBairro.setText(String.valueOf(modelCliente.getCliBairro()));
        jtfCidade.setText(String.valueOf(modelCliente.getCliCidade()));
        jcbEstado.setSelectedItem(String.valueOf(modelCliente.getCliEstado()));
        jtfTelefone.setText(String.valueOf(modelCliente.getCliTelefone()));
    }//GEN-LAST:event_jtfCodigoClienteFocusLost

    private void jtfCodigoProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoFocusLost
        // TODO add your handling code here:
        modelProdutos = controllerProdutos.retornarIdProdutoController(Integer.parseInt(jtfCodigoProduto.getText()));
        jcbNomeProduto.setSelectedItem(modelProdutos.getProNome());
        jtfValorVenda.setText(String.valueOf(bLMascaras.arredondamentoComPontoDuasCasasDouble(modelProdutos.getProValorVenda())));
    }//GEN-LAST:event_jtfCodigoProdutoFocusLost

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        // TODO add your handling code here:
        try {
            int linha = jtVendas.getSelectedRow();
            int codigoVenda = (int) jtVendas.getValueAt(linha, 0);
            listaModelProdutos = new ArrayList<>();
            listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
            for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
                modelProdutos = new ModelProdutos();
                modelProdutos.setIdProduto(listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto());
                modelProdutos.setProEstoque(
                        listaModelProdutosVendasProdutos.get(i).getModelProdutos().getProEstoque()
                        + listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade());
                listaModelProdutos.add(modelProdutos);
            }
            if (controllerProdutos.alterarEstoqueProdutoVendaController(listaModelProdutos)) {
                controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);

                switch (JOptionPane.showConfirmDialog(null, "Deseja excluir venda selecionada?", "EXCLUSÃO DE VENDA", JOptionPane.YES_NO_OPTION)) {
                    case 0:
                        controllerVendas.excluirVendasController(codigoVenda);
                        this.carregarVendas();
                        break;

                    case 1:
                        JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
                        break;
                }

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nenhuma venda selecionada na tabela", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbExcluirActionPerformed
    /**
     * aplica descontos ao valor final da venda
     */
    private void aplicarDesconto() {
        try {
            jtfValorTotal.setText(String.valueOf(Double.parseDouble(jtfValorTotal.getText()) - formatador.converterVirgulaParaPontoReturn(jtfDesconto.getText())));
        } catch (NumberFormatException e) {
        }
    }

    /**
     * soma todos os produtos da tabela
     *
     * @param evt
     */
    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
        // TODO add your handling code here:
        adicionarItensTabela();
    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void adicionarItensTabela() {
        int estoque = 0, codigoProduto = modelProdutos.getIdProduto();
        String descricaoProduto = modelProdutos.getProNome();
        estoque = modelProdutos.getProEstoque();
        try {
            if (estoque >= Integer.parseInt(jtfQuantidade.getText())) {
                modelProdutos = controllerProdutos.retornarIdProdutoController(Integer.parseInt(jtfCodigoProduto.getText()));
                //adicionar uma linha na tabela
                DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
                int cont = 0;
                double quantidade = 0, valorVenda = 0;
                quantidade = formatador.converterVirgulaParaPontoReturn(jtfQuantidade.getText());
                valorVenda = formatador.converterVirgulaParaPontoReturn(jtfValorVenda.getText());
                for (int i = 0; i < cont; i++) {
                    modelo.setNumRows(0);
                }
                if (codigoProduto != jtProdutosVenda.getRowCount()) {
                    modelo.addRow(new Object[]{
                        modelProdutos.getIdProduto(),
                        modelProdutos.getProNome(),
                        jtfQuantidade.getText(),
                        NumberFormat.getCurrencyInstance().format(modelProdutos.getProValor()),
                        NumberFormat.getCurrencyInstance().format(valorVenda),
                        quantidade * bLMascaras.arredondamentoComPontoDuasCasasDouble(valorVenda)
                    });
                } else {
                    JOptionPane.showMessageDialog(this, "Produto '" + descricaoProduto + "' ja inserido", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
                somarValorTotalProdutos();

            } else {
                JOptionPane.showMessageDialog(this, "Quantidade não disponÍvel para '" + descricaoProduto + "'", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
        }
    }

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        // TODO add your handling code here:
        jtfCodigoCliente.grabFocus();
        habilitarDesabilitarCampos(true);
        alterarSalvar = "salvar";
        limparFormulario();
        jbNovo.setEnabled(false);
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // TODO add your handling code here:
//        this.viewPagamentoVendas = new ViewPagamentoVendas(this, true);
//        try {
//            viewPagamentoVendas.setValorTotal(Float.parseFloat(jtfValorTotal.getText()));
//            viewPagamentoVendas.setJTFValorTotal();
//            viewPagamentoVendas.setVisible(true);
//        } catch (Exception e) {
//        }
//        if (viewPagamentoVendas.isPago()) {
        if (alterarSalvar.equals("salvar")) {
            salvarVenda();
        } else if (alterarSalvar.equals("alterar")) {
            alterarVenda();
        }
//        }
        jbNovo.setEnabled(true);
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void salvarVenda() {
        int codigoVenda;
        int codigoProduto = 0;
        double desconto = 0;
        listaModelVendasProdutos = new ArrayList<>();

        if (jtfDesconto.getText().equals("")) {
            desconto = 0;
        } else {
            desconto = formatador.converterVirgulaParaPontoReturn(String.valueOf(jtfDesconto.getText()));
        }
        if (!jtfNumeroVenda.getText().equals("")) {
            modelVendas.setIdVenda(Integer.parseInt(jtfNumeroVenda.getText()));
        }

        try {
            modelVendas.setCliente(Integer.parseInt(jtfCodigoCliente.getText()));
            modelVendas.setFormaPagamento(Integer.parseInt(jtfCodigoPagamento.getText()));
        } catch (Exception e) {
        }

        try {
            modelVendas.setVenDataVenda(bLDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception e) {
        }
        modelVendas.setVenValorLiquido(Double.parseDouble(jtfValorTotal.getText()));
        modelVendas.setVenValorBruto(Double.parseDouble(jtfValorTotal.getText()) + desconto);
        modelVendas.setVenValorDesconto(desconto);
        //altera
        //inicio retornar para estoque e excluir produtos da venda
        codigoVenda = controllerVendas.salvarVendasController(modelVendas);
        if (codigoVenda > 0) {
            JOptionPane.showMessageDialog(this, "Venda salva com sucesso", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao salvar venda", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        int cont = jtProdutosVenda.getRowCount();
        for (int i = 0; i < cont; i++) {
            codigoProduto = (int) jtProdutosVenda.getValueAt(i, 0);
            modelVendasProdutos = new ModelVendasProdutos();
            modelProdutos = new ModelProdutos();
            modelVendasProdutos.setProduto(codigoProduto);
            modelVendasProdutos.setVendas(codigoVenda);
            modelVendasProdutos.setVenProValor((double) jtProdutosVenda.getValueAt(i, 3));
            modelVendasProdutos.setVenProValorVenda(formatador.converterVirgulaParaPontoReturn(jtProdutosVenda.getValueAt(i, 4).toString()));
            modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
            //produtos
            modelProdutos.setIdProduto(codigoProduto);
            modelProdutos.setProEstoque(controllerProdutos.retornarIdProdutoController(codigoProduto).getProEstoque()
                    - Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
            listaModelVendasProdutos.add(modelVendasProdutos);
            listaModelProdutos.add(modelProdutos);
        }
        //salvar os produtos da venda
        if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
            controllerProdutos.alterarEstoqueProdutoVendaController(listaModelProdutos);

        } else {
            JOptionPane.showMessageDialog(this, "Erro ao salvar produtos da venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        //salvar financeiro a receber
        if (jrbAVista.isSelected() == true) {
            modelContasReceber.setFkCliente(Integer.parseInt(this.jtfCodigoCliente.getText()));
            modelContasReceber.setFkPagamento(Integer.parseInt(this.jtfCodigoPagamento.getText()));
            modelContasReceber.setFkVenda(codigoVenda);
            modelContasReceber.setDescricaoContasReceber(this.jcbNomeCliente.getSelectedItem().toString());
            try {
                modelContasReceber.setDataContasReceber(bLDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
                modelContasReceber.setVencimentoContasReceber(bLDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
            } catch (Exception e) {
            }
            try {
                modelContasReceber.setValorContasReceber(formatador.converterVirgulaParaPontoReturn(this.jtfValorTotal.getText()));
            } catch (Exception e) {
            }
            modelContasReceber.setNumeroParcelas(1);
            if (controllerContasReceber.salvarContasReceberController(modelContasReceber) > 0) {
                carregarVendas();
                limparFormulario();
                habilitarDesabilitarCampos(false);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar conta", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } else if (jrbAPrazo.isSelected() == true) {
            modelContasReceber.setFkCliente(Integer.parseInt(this.jtfCodigoCliente.getText()));
            modelContasReceber.setFkPagamento(Integer.parseInt(this.jtfCodigoPagamento.getText()));
            modelContasReceber.setFkVenda(codigoVenda);
            modelContasReceber.setDescricaoContasReceber(this.jcbNomeCliente.getSelectedItem().toString());
            try {
                modelContasReceber.setDataContasReceber(bLDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
                modelContasReceber.setVencimentoContasReceber(bLDatas.converterDataParaDateUS(jtfDataVencimento.getDate()));
            } catch (Exception e) {
            }
            try {
                modelContasReceber.setValorContasReceber(formatador.converterVirgulaParaPontoReturn(this.jtfValorTotal.getText()));
            } catch (Exception e) {
            }
            modelContasReceber.setNumeroParcelas(Integer.parseInt(this.jtfParcelas.getText()));
            int codigoConta = controllerContasReceber.salvarContasReceberController(modelContasReceber);
            if (codigoConta > 0) {
                for (int i = 0; i < jtParcelas.getRowCount(); i++) {
                    modelParcelas = new ModelParcelas();
                    modelParcelas.setConta(codigoConta);
                    modelParcelas.setValorParcela(codigoVenda);
                    modelParcelas.setVenProValor((double) jtProdutosVenda.getValueAt(i, 3));
                    modelParcelas.setVenProValorVenda(formatador.converterVirgulaParaPontoReturn(jtProdutosVenda.getValueAt(i, 4).toString()));
                    modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                    //produtos
                    modelProdutos.setIdProduto(codigoProduto);
                    modelProdutos.setProEstoque(controllerProdutos.retornarIdProdutoController(codigoProduto).getProEstoque()
                            - Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
                    listaModelVendasProdutos.add(modelVendasProdutos);
                    listaModelProdutos.add(modelProdutos);

                }
                carregarVendas();
                limparFormulario();
                habilitarDesabilitarCampos(false);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar conta", "ERRO", JOptionPane.ERROR_MESSAGE);
            }

        }
    }

    private void Parcelas() {
        int qtdParcelas;
        double valorVenda, valorParcela;
        qtdParcelas = Integer.parseInt(this.jtfParcelas.getText());
        valorVenda = Double.parseDouble(this.jtfValorTotal.getText());
        valorParcela = valorVenda / qtdParcelas;
        Date Data = (Date) jtfDataVencimento.getDate();
        Calendar c = Calendar.getInstance();
        c.setTime(Data);
        c.add(Calendar.DATE, +30);
        Data = (Date) c.getTime();
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Código", "Data", "Valor"};
        int i = 1;

        while (i <= qtdParcelas) {
            dados.add(new Object[]{i, Data, valorParcela});
            i++;
        }

        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        jtParcelas.setModel(modelo);
        jtParcelas.getColumnModel().getColumn(0).setPreferredWidth(50);
        jtParcelas.getColumnModel().getColumn(0).setResizable(false);
        jtParcelas.getColumnModel().getColumn(1).setPreferredWidth(100);
        jtParcelas.getColumnModel().getColumn(1).setResizable(false);
        jtParcelas.getColumnModel().getColumn(2).setPreferredWidth(180);
        jtParcelas.getColumnModel().getColumn(2).setResizable(false);
        jtParcelas.setAutoResizeMode(jtParcelas.AUTO_RESIZE_OFF);
        jtParcelas.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    private void tipoPagamento() {
        if (jrbAVista.isSelected() == true) {
            jtfParcelas.setVisible(false);
            jlQtdeParcelas.setVisible(false);
        } else if (jrbAPrazo.isSelected() == true) {
            jtfParcelas.setVisible(true);
            jlQtdeParcelas.setVisible(true);
            jtfParcelas.requestFocus();
        }

    }

    private void alterarVenda() {

        int codigoVenda = 0, codigoProduto = 0;
        double desconto = 0;
        listaModelVendasProdutos = new ArrayList<>();

        if (jtfDesconto.getText().equals("")) {
            desconto = 0;
        } else {
            desconto = formatador.converterVirgulaParaPontoReturn((jtfDesconto.getText()));
        }
        if (!jtfNumeroVenda.getText().equals("")) {
            modelVendas.setIdVenda(Integer.parseInt(jtfNumeroVenda.getText()));
        }

        modelVendas.setCliente(Integer.parseInt(jtfCodigoCliente.getText()));
        try {
            modelVendas.setVenDataVenda(bLDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception e) {
        }
        modelVendas.setVenValorLiquido(Double.parseDouble(jtfValorTotal.getText()));
        modelVendas.setVenValorBruto(Double.parseDouble(jtfValorTotal.getText()) + desconto);
        modelVendas.setVenValorDesconto(desconto);
        int linha = jtVendas.getSelectedRow();
        codigoVenda = (int) jtVendas.getValueAt(linha, 0);
        listaModelProdutos = new ArrayList<>();
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
            modelProdutos = new ModelProdutos();
            modelProdutos.setIdProduto(listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto());
            modelProdutos.setProEstoque(
                    listaModelProdutosVendasProdutos.get(i).getModelProdutos().getProEstoque()
                    + listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade());
            listaModelProdutos.add(modelProdutos);
        }
        if (controllerProdutos.alterarEstoqueProdutoVendaController(listaModelProdutos)) {
            if (controllerVendasProdutos.excluirVendasProdutosController(codigoVenda)) {
                //JOptionPane.showMessageDialog(this, "Venda excluída com sucesso!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                this.carregarVendas();

            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        //fim retornar para estoque e excluir produtos da venda

        if (controllerVendas.atualizarVendasController(modelVendas)) {
            JOptionPane.showMessageDialog(this, "Venda alterada com sucesso!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao alterar a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        //adicionar produtos na lista para salvar
        int cont = jtProdutosVenda.getRowCount();
        for (int i = 0; i < cont; i++) {
            codigoProduto = (int) jtProdutosVenda.getValueAt(i, 0);
            modelVendasProdutos = new ModelVendasProdutos();
            modelProdutos = new ModelProdutos();
            modelVendasProdutos.setProduto(codigoProduto);
            modelVendasProdutos.setVendas(codigoVenda);
            modelVendasProdutos.setVenProValor((double) jtProdutosVenda.getValueAt(i, 3));
            modelVendasProdutos.setVenProValorVenda((double) jtProdutosVenda.getValueAt(i, 4));
            modelVendasProdutos.setVenProQuantidade(Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
            //produtos
            modelProdutos.setIdProduto(codigoProduto);
            modelProdutos.setProEstoque(controllerProdutos.retornarIdProdutoController(codigoProduto).getProEstoque()
                    - Integer.parseInt(jtProdutosVenda.getValueAt(i, 2).toString()));
            listaModelVendasProdutos.add(modelVendasProdutos);
            listaModelProdutos.add(modelProdutos);
        }
        //salvar os produtos da venda
        if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao salvar os produtos da venda!", "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
        }
        //alterar financeiro a receber
        if (controllerContasReceber.excluirContasReceberControllerVenda(codigoVenda)) {
            JOptionPane.showMessageDialog(this, "Venda excluída com sucesso!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);

        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir a venda!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        modelContasReceber.setDescricaoContasReceber(this.jcbNomeCliente.getSelectedItem().toString());
        modelContasReceber.setFkCliente(Integer.parseInt(this.jtfCodigoCliente.getText()));
        modelContasReceber.setFkPagamento(Integer.parseInt(this.jtfCodigoPagamento.getText()));
        modelContasReceber.setFkVenda(codigoVenda);
        try {
            modelContasReceber.setDataContasReceber(bLDatas.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
            modelContasReceber.setVencimentoContasReceber(bLDatas.converterDataParaDateUS(jtfDataVencimento.getDate()));
        } catch (Exception e) {
        }
        try {
            modelContasReceber.setValorContasReceber(formatador.converterVirgulaParaPontoReturn(this.jtfValorTotal.getText()));
        } catch (Exception e) {
        }

        if (controllerContasReceber.salvarContasReceberController(modelContasReceber) > 0) {
//            JOptionPane.showMessageDialog(this, "Conta salva com sucesso", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            carregarVendas();
            limparFormulario();
            habilitarDesabilitarCampos(false);
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao salvar conta", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        // TODO add your handling code here:
        try {
            habilitarDesabilitarCampos(true);
            alterarSalvar = "alterar";
            int linha = jtVendas.getSelectedRow();
            int codigoVenda = (int) jtVendas.getValueAt(linha, 0);
            listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
            listaModelVendasCliente = controllerVendasCliente.getListaVendasClienteController();
            DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
            modelo.setNumRows(0);
            int cont = listaModelProdutosVendasProdutos.size();
            for (int i = 0; i < cont; i++) {
                jtfNumeroVenda.setText(String.valueOf(listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVendas()));
                modelo.addRow(new Object[]{
                    listaModelProdutosVendasProdutos.get(i).getModelProdutos().getIdProduto(),
                    listaModelProdutosVendasProdutos.get(i).getModelProdutos().getProNome(),
                    listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade(),
                    listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProValor(),
                    listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProValorVenda(),
                    listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProQuantidade()
                    * listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenProValorVenda()
                });
            }
            modelVendasContasReceber = new ModelVendasContasReceber();
            modelVendasContasReceber = controllerVendasContasReceber.getVendasContasReceberController(codigoVenda);
            jtfDataVencimento.setDate(modelVendasContasReceber.getModelContasReceber().getVencimentoContasReceber());
            jcbNomeCliente.setSelectedItem(jtVendas.getValueAt(linha, 1));
            preencherCodigoClientePeloCombobox();

            somarValorTotalProdutos();
            buscaDesconto();
            jTabbedPane1.setSelectedIndex(0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nenhuma venda selecionada na tabela", "ERRO", JOptionPane.ERROR_MESSAGE);
            habilitarDesabilitarCampos(false);
        }
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbRemoverProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverProdutosActionPerformed
        // TODO add your handling code here:
        int linha = jtProdutosVenda.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
        modelo.removeRow(linha);
        somarValorTotalProdutos();
    }//GEN-LAST:event_jbRemoverProdutosActionPerformed

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) this.jtVendas.getModel();
        final TableRowSorter<TableModel> classificador = new TableRowSorter<>(modelo);
        this.jtVendas.setRowSorter(classificador);
        String texto = this.jtfPesquisa.getText();
        if (jrbCodigo.isSelected() == true) {
            classificador.setRowFilter(RowFilter.regexFilter(texto, 0));
        } else if (jrbNomeCliente.isSelected() == true) {
            classificador.setRowFilter(RowFilter.regexFilter(texto, 1));
        }
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jcbNomeProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbNomeProdutoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (jcbNomeProduto.isPopupVisible()) {
            preencherCodigoProdutoPeloCombobox();
        }
    }//GEN-LAST:event_jcbNomeProdutoPopupMenuWillBecomeInvisible

    private void jcbNomeClientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbNomeClientePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (jcbNomeCliente.isPopupVisible()) {
            preencherCodigoClientePeloCombobox();
        }
    }//GEN-LAST:event_jcbNomeClientePopupMenuWillBecomeInvisible

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        limparFormulario();
        habilitarDesabilitarCampos(false);
        jbNovo.setEnabled(true);
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jtfEndencoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEndencoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEndencoActionPerformed

    private void jtfDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDescontoFocusLost
        // TODO add your handling code here:
        somarValorTotalProdutos();
    }//GEN-LAST:event_jtfDescontoFocusLost

    private void jtfValorVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfValorVendaActionPerformed
        // TODO add your handling code here:
        adicionarItensTabela();
        jtfCodigoProduto.requestFocus();
        jtfQuantidade.setText("");
        jtfValorVenda.setText("");
        jtfCodigoCliente.setEnabled(false);
        jcbNomeCliente.setEnabled(false);
    }//GEN-LAST:event_jtfValorVendaActionPerformed

    private void jtfQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfQuantidadeActionPerformed
        // TODO add your handling code here:
        jtfValorVenda.requestFocus();
    }//GEN-LAST:event_jtfQuantidadeActionPerformed

    private void jtfCodigoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoClienteActionPerformed
        // TODO add your handling code here:
        jtfCodigoProduto.requestFocus();
    }//GEN-LAST:event_jtfCodigoClienteActionPerformed

    private void jtfCodigoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoActionPerformed
        // TODO add your handling code here:
        jtfQuantidade.requestFocus();
    }//GEN-LAST:event_jtfCodigoProdutoActionPerformed

    private void jtfCodigoClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoClienteFocusGained
        // TODO add your handling code here:
        jtfCodigoCliente.selectAll();
    }//GEN-LAST:event_jtfCodigoClienteFocusGained

    private void jtfCodigoProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoProdutoFocusGained
        // TODO add your handling code here:
        jtfCodigoProduto.selectAll();
    }//GEN-LAST:event_jtfCodigoProdutoFocusGained

    private void jtfQuantidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfQuantidadeFocusGained
        // TODO add your handling code here:
        jtfQuantidade.selectAll();
    }//GEN-LAST:event_jtfQuantidadeFocusGained

    private void jtfValorVendaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfValorVendaFocusGained
        // TODO add your handling code here:
        jtfValorVenda.selectAll();
    }//GEN-LAST:event_jtfValorVendaFocusGained

    private void jbSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbSalvarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbSalvarKeyPressed

    private void jbNovoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbNovoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbNovoKeyPressed

    private void jcbPagamentoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcbPagamentoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (jcbPagamento.isPopupVisible()) {
            preencherCodigoFormaPagamentoPeloCombobox();
        }
    }//GEN-LAST:event_jcbPagamentoPopupMenuWillBecomeInvisible

    private void jtfCodigoPagamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodigoPagamentoFocusLost
        // TODO add your handling code here:
        modelFormaPagamento = controllerFormaPagamento.getFormaPagamentoController(Integer.parseInt(jtfCodigoPagamento.getText()));
        jcbPagamento.setSelectedItem(modelFormaPagamento.getDescricaoFormaPagamento());
    }//GEN-LAST:event_jtfCodigoPagamentoFocusLost

    private void jrbAVistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAVistaActionPerformed
        // TODO add your handling code here:
        tipoPagamento();
    }//GEN-LAST:event_jrbAVistaActionPerformed

    private void jrbAPrazoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAPrazoActionPerformed
        // TODO add your handling code here:
        tipoPagamento();
    }//GEN-LAST:event_jrbAPrazoActionPerformed

    /**
     * preenche o combobox com todos os clientes
     */
    private void listarClientes() {
        listaModelClientes = controllerCliente.getListaClienteController();
        jcbNomeCliente.removeAllItems();
        for (int i = 0; i < listaModelClientes.size(); i++) {
            jcbNomeCliente.addItem(listaModelClientes.get(i).getCliNome());
        }
    }

    private void preencherCodigoClientePeloCombobox() {
        modelCliente = controllerCliente.getClienteController(jcbNomeCliente.getSelectedItem().toString());
        jtfCodigoCliente.setText(String.valueOf(modelCliente.getIdCliente()));
        jtfCPF.setText(String.valueOf(modelCliente.getCliCPF()));
        jtfEndenco.setText(String.valueOf(modelCliente.getCliEndereco()));
        jtfBairro.setText(String.valueOf(modelCliente.getCliBairro()));
        jtfCidade.setText(String.valueOf(modelCliente.getCliCidade()));
        jcbEstado.setSelectedItem(String.valueOf(modelCliente.getCliEstado()));
        jtfTelefone.setText(String.valueOf(modelCliente.getCliTelefone()));
    }

    private void preencherCodigoProdutoPeloCombobox() {
        try {
            modelProdutos = controllerProdutos.retornarNomeProdutoController(jcbNomeProduto.getSelectedItem().toString());
            jtfCodigoProduto.setText(String.valueOf(modelProdutos.getIdProduto()));
            jtfValorVenda.setText(String.valueOf(NumberFormat.getCurrencyInstance().format(modelProdutos.getProValorVenda())));
        } catch (Exception e) {
        }
    }

    private void preencherCodigoFormaPagamentoPeloCombobox() {
        modelFormaPagamento = controllerFormaPagamento.getFormaPagamentoController(jcbPagamento.getSelectedItem().toString());
        jtfCodigoPagamento.setText(String.valueOf(modelFormaPagamento.getIdFormaPagamento()));
    }

    /**
     * preencher combobox produtos
     */
    private void listarProdutos() {
        listaModelProdutos = controllerProdutos.retornarListaProdutoController();
        jcbNomeProduto.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            jcbNomeProduto.addItem(listaModelProdutos.get(i).getProNome());
        }
    }

    /**
     * preencher combobox formas de pagamento
     */
    private void listarFormaPagamento() {
        listaModelFormaPagamento = controllerFormaPagamento.getListaFormaPagamentoController();
        jcbPagamento.removeAllItems();
        for (int i = 0; i < listaModelFormaPagamento.size(); i++) {
            jcbPagamento.addItem(listaModelFormaPagamento.get(i).getDescricaoFormaPagamento());
        }
    }

    /**
     * soma todos os produtos da venda
     */
    private void somarValorTotalProdutos() {
        double soma = 0, valor;
        int cont = jtProdutosVenda.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = (double) jtProdutosVenda.getValueAt(i, 5);
            soma = soma + valor;
        }
        jtfValorTotal.setText(String.valueOf(soma));
        aplicarDesconto();
    }

    private void buscaDesconto() {
        jtfDesconto.setText(modelVendas.getVenValorDesconto() + "");
    }

    private void carregarVendas() {
        listaModelVendasCliente = controllerVendasCliente.getListaVendasClienteController();
        DefaultTableModel modelo = (DefaultTableModel) jtVendas.getModel();
        modelo.setNumRows(0);
        int cont = listaModelVendasCliente.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelVendasCliente.get(i).getModelVendas().getIdVenda(),
                listaModelVendasCliente.get(i).getModelCliente().getCliNome(),
                bLDatas.formatarData(listaModelVendasCliente.get(i).getModelVendas().getVenDataVenda()),
                NumberFormat.getCurrencyInstance().format(listaModelVendasCliente.get(i).getModelVendas().getVenValorLiquido())
            });
        }
    }

    private void carregarCodigoVenda() {
        listaModelVendasCliente = controllerVendasCliente.getListaVendasClienteController();
        DefaultTableModel modelo = (DefaultTableModel) jtVendas.getModel();
        modelo.setNumRows(0);
        int cont = listaModelVendasCliente.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelVendasCliente.get(i).getModelVendas().getIdVenda()
            });
        }
    }

    /**
     * limpar formulario de vendas
     */
    private void limparFormulario() {
        jtfQuantidade.setText("");
        jtfDesconto.setText("");
        jtfValorTotal.setText("");
        jtfNumeroVenda.setText("");
        jtfValorVenda.setText("");
        DefaultTableModel modelo = (DefaultTableModel) jtProdutosVenda.getModel();
        modelo.setNumRows(0);
        jcbEstado.setSelectedItem(0);
        jtfDataVencimento.setDate(null);
    }

    private void habilitarDesabilitarCampos(boolean condicao) {
        jtfCodigoCliente.setEnabled(condicao);
        jcbNomeCliente.setEnabled(condicao);
        jtfCodigoProduto.setEnabled(condicao);
        jcbNomeProduto.setEnabled(condicao);
        jtfQuantidade.setEnabled(condicao);
        jtfDesconto.setEnabled(condicao);
        jtfValorVenda.setEnabled(condicao);
        jbAdicionar.setEnabled(condicao);
        jbSalvar.setEnabled(condicao);
        jbRemoverProdutos.setEnabled(condicao);
        jtProdutosVenda.setEnabled(condicao);
        jcbPagamento.setEnabled(condicao);
        jtfDataVencimento.setEnabled(condicao);
    }

    private void letraMaiuscula() {
        jtfPesquisa.setDocument(new LetrasMaiusculas());
    }

    private void setIcone() {
        URL caminhoIcone = getClass().getResource("/imagens/icon.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminhoIcone);
        this.setIconImage(iconeTitulo);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup PesquisaVendas;
    private javax.swing.ButtonGroup TipoPagamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbRemoverProdutos;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox<String> jcbEstado;
    private componentes.UJComboBox jcbNomeCliente;
    private componentes.UJComboBox jcbNomeProduto;
    private componentes.UJComboBox jcbPagamento;
    private javax.swing.JLabel jlQtdeParcelas;
    private javax.swing.JRadioButton jrbAPrazo;
    private javax.swing.JRadioButton jrbAVista;
    private javax.swing.JRadioButton jrbCodigo;
    private javax.swing.JRadioButton jrbNomeCliente;
    private javax.swing.JTable jtParcelas;
    private javax.swing.JTable jtProdutosVenda;
    private javax.swing.JTable jtVendas;
    private javax.swing.JTextField jtfBairro;
    private javax.swing.JFormattedTextField jtfCPF;
    private javax.swing.JTextField jtfCidade;
    private javax.swing.JTextField jtfCodigoCliente;
    private javax.swing.JTextField jtfCodigoPagamento;
    private javax.swing.JTextField jtfCodigoProduto;
    private com.toedter.calendar.JDateChooser jtfDataVencimento;
    private javax.swing.JTextField jtfDesconto;
    private javax.swing.JTextField jtfEndenco;
    private javax.swing.JTextField jtfNumeroVenda;
    private javax.swing.JTextField jtfParcelas;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextField jtfQuantidade;
    private javax.swing.JFormattedTextField jtfTelefone;
    private javax.swing.JTextField jtfValorTotal;
    private javax.swing.JTextField jtfValorVenda;
    private componentes.UJPanelImagem uJPanelImagem1;
    private componentes.UJPanelImagem uJPanelImagem2;
    private componentes.UJPanelImagem uJPanelImagem3;
    private componentes.UJPanelImagem uJPanelImagem4;
    private componentes.UJPanelImagem uJPanelImagem5;
    // End of variables declaration//GEN-END:variables
}
